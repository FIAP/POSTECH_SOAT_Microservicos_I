version: '3.9'

x-kong-config: &kong-env
  KONG_DATABASE: postgres
  KONG_PG_DATABASE: kong
  KONG_PG_HOST: db-kong
  KONG_PG_USER: kong
  KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password

volumes:
  db_estoque_data:
  kong_data: {}
  kong_prefix_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs
  kong_tmp_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs

networks:
  fiap-store:
    external: false

services:
  db-estoque:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: estoque
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - db_estoque_data:/var/lib/mysql
    networks:
      - fiap-store

  estoque-1:
    build: estoque/
    hostname: estoque-1
    depends_on:
      - db-estoque
    networks:
      - fiap-store

  estoque-2:
    build: estoque/
    hostname: estoque-2
    depends_on:
      - db-estoque
    networks:
      - fiap-store
  
  kong-migrations:
    image: "kong:3.3.0-ubuntu"
    command: kong migrations bootstrap
    depends_on:
      - db-kong
    environment:
      <<: *kong-env
    secrets:
      - kong_postgres_password
    networks:
      - fiap-store
    restart: on-failure

  kong-migrations-up:
    image: "kong:3.3.0-ubuntu"
    command: kong migrations up && kong migrations finish
    depends_on:
      - db-kong
    environment:
      <<: *kong-env
    secrets:
      - kong_postgres_password
    networks:
      - fiap-store
    restart: on-failure

  kong:
    image: "kong:3.3.0-ubuntu"
    user: "kong"
    environment:
      <<: *kong-env
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: "0.0.0.0:8000"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PREFIX: /var/run/kong
      KONG_DECLARATIVE_CONFIG: "/opt/kong/kong.yaml"
    secrets:
      - kong_postgres_password
    networks:
      - fiap-store
    ports:
      - "0.0.0.0:8000:8000/tcp"
      - "0.0.0.0:8443:8443/tcp"
      - "0.0.0.0:8001:8001/tcp"
      - "0.0.0.0:8444:8444/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure:5
    read_only: true
    volumes:
      - kong_prefix_vol:/var/run/kong
      - kong_tmp_vol:/tmp
      - ./config:/opt/kong
    security_opt:
      - no-new-privileges

  db-kong:
    image: postgres:9.5
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD_FILE: /run/secrets/kong_postgres_password
    secrets:
      - kong_postgres_password
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    networks:
      - fiap-store
    volumes:
      - kong_data:/var/lib/postgresql/data
  
  swagger-ui:
    image: swaggerapi/swagger-ui
    environment:
      SWAGGER_JSON: "/openapi.json"
    volumes:
      - ./contrato/openapi.json:/openapi.json
    ports:
      - "8888:8080"

secrets:
  kong_postgres_password:
    file: ./POSTGRES_PASSWORD.txt